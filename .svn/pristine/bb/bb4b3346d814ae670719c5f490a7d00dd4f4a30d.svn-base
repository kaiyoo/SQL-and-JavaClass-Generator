package insert;

import java.io.StringWriter;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.ResourceBundle;

import org.apache.velocity.Template;
import org.apache.velocity.VelocityContext;
import org.apache.velocity.app.VelocityEngine;
import org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader;

import main.MainController;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.geometry.Insets;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class InsertController implements Initializable {
	
	public Stage currentStage;
	public MainController mainController;
	String[] columName=null;
	String[] columValues=null;
	HBox hbox=null;
	Label[] lb =null;
	TextField[] tf=null;
	int columLength;
	String tableName = mainController.getTblTableInfo().getTableName();

	@FXML
    private VBox vbox;
    
	@FXML 
	private Button btnCreate;

	@FXML 
	private Button btnCancle;
	
	/**
	 * 
	 * 1. 메소드명 : insert
	 * 2. 작성일 : 2015. 8. 20. 오후 3:12:30
	 * 3. 작성자 : pc09 오승민
	 * 4. 설명 : insert버튼 클릭시 TxtPreView에 쿼리값 띄움
	 * @param event
	 */
	@FXML
	void insert(ActionEvent event) {
		VelocityEngine ve = new VelocityEngine();
		ve.setProperty("resource.loader", "classpath");
		ve.setProperty("classpath.resource.loader.class",ClasspathResourceLoader.class.getName());
		ve.setProperty("input.encoding", "UTF-8");
		ve.init();
			
		// 이제 템플릿 파일을 읽어보자.
		Template t = ve.getTemplate("/template/insert.vm");
		
		for (int j = 0; j < tf.length; j++) {
			columValues[j]=tf[j].getText();
		}

		// 템플릿에 던져줄 데이터 만들기
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("tableName", tableName);				//테이블명 입력
		map.put("columName", columName);				//컬럼 이름 입력
		map.put("columValues", columValues);			//컬럽 값 입력.
		map.put("columLength", columLength);
		
		// 이제 템플릿과 데이터를 합치자
		VelocityContext context = new VelocityContext(map);

		StringWriter writer = new StringWriter();
		t.merge(context, writer);
		
		mainController.setTxtPreView(writer.toString());			//쿼리문을 소스창ㅇㅔ 뿌린다.
		this.currentStage.close();
	}

	@FXML
	void cancle(ActionEvent event) {
		this.currentStage.close();
	}
	
	/**
	 * 
	 * 1. 메소드명 : base
	 * 2. 작성일 : 2015. 8. 20. 오후 3:13:13
	 * 3. 작성자 : pc09	오승민
	 * 4. 설명 : insert창에 동적으로 라벨, 텍스트필드 추가.
	 * @throws Exception
	 */
	void base() throws Exception {
		Connection conn = config.DBConnect.connect(); 						// db연동
		Statement stmt = null;
		ResultSet rs = null;
		ResultSetMetaData rsmd;
		stmt = conn.createStatement();
		
		String sql = "select * from " + tableName;						 // 선택한 db table 설정.

		rs = stmt.executeQuery(sql);
		rsmd = rs.getMetaData();
		columLength=rsmd.getColumnCount();
		
		lb=new Label[columLength];							
		tf=new TextField[columLength];						
		
		columName= new String[columLength];					//컬럼이름의 크기를 컬럼의 개수로 지정.
		
		for (int j = 0; j < columLength; j++) {				//컬럼이름을 배열에 저장함
			columName[j]=rsmd.getColumnName(j + 1);
		}
		columValues= new String[columLength];
		
		for (int i = 0; i < columLength; i++) {
			String name = rsmd.getColumnName(i + 1); 
			hbox = new HBox();												//hbox 생성
			hbox.setSpacing(15);											//hbox 공간 15
			hbox.setPadding(new Insets(40, 0, 0, 50));
			vbox.getChildren().add(hbox);									//기본판에 hbox추가.	
			lb[i]=new Label(name);	
			tf[i]=new TextField();														// 텍스트필드 생성
			tf[i].setId(name);	

			hbox.getChildren().add(lb[i]);
			hbox.getChildren().add(tf[i]);
		}
	}
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		try {
			base();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
